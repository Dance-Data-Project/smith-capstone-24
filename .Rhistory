schedule_d_checkvars <- schedule_d_checkvars %>%
select(ein,organization_name,fiscal_year,
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt)
# Chunk 3
## calculating the change in endowment balance, difference between eoy - boy
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(difference = (eoy_balance - boy_balance))
## new df with diffs and vars of interest
df_diffs <- schedule_d_cleaned %>%
select(organization_name, fiscal_year, boy_balance, eoy_balance, difference)
## total_expenses; sum of administrative_expenses, grants_or_scholarships, other_expenditure
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(total_expenses = rowSums(
select(., administrative_expenses, grants_or_scholarships, other_expenditure)))
## calculating expense ratio, total expenses relative to the endowment's total assets
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(expense_ratio = (total_expenses / eoy_balance) * 100)
## new df with expense ratios and vars of interests
expense_ratio_df <- schedule_d_cleaned %>%
select(organization_name, fiscal_year, expense_ratio, eoy_balance, total_expenses)
# net flows reflects net inflow/outflow of contributions to the fund
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(net_flows = (contributions-grants_or_scholarships))
## set df order for vars
schedule_d_cleaned <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, boy_balance, eoy_balance,
difference, contributions, investment_earnings_or_losses,
grants_or_scholarships, other_expenditure, administrative_expenses,
total_expenses, expense_ratio, net_flows)
# Chunk 4
## example snapshot of changes in fiscal year balances
diff_nyc <- df_diffs %>%
filter(organization_name == "New York City Ballet")
diff_sf <- df_diffs %>%
filter(organization_name == "San Francisco Ballet")
# Chunk 5
## print the first few rows of New York City Ballet
print(head(diff_nyc))
# Chunk 6
## print the first few rows of San Francisco Ballet
print(head(diff_sf))
# Chunk 7
# df_diffs <- df_diffs[order(df_diffs$organization_name),]
# df_diffs
# Chunk 8
# df_diffs <- df_diffs[order(df_diffs$difference),]
# df_diffs
# Chunk 9
# positive_diff <- df_diffs %>%
#   if `differences` == (-)
# Chunk 10
# Sort organization_name alphabetically
# Create an interactive table
df_diffs_table <- datatable(df_diffs,
filter = "top", #where to toggle
options = list(pageLength = 10, # organization names per page
lengthMenu = c(10, 25, 50))) # number of rows per page, three options
# Chunk 11
df_diffs_table
## Finding the top5 and bottom5 based on the eoy balance in 2022
top5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet", "San Francisco Ballet",
"Houston Ballet", "Alvin Ailey American Dance Theater",
"Boston Ballet"))
top5$company_color[top5$organization_name == "Alvin Ailey American Dance Theater"] <-
"#FFA500" # Orange
top5$company_color[top5$organization_name  == "Boston Ballet"] <-
'#556B2F' # Dirty Green
top5$company_color[top5$organization_name  == "Houston Ballet"] <-
"#00FF00" # Green
top5$company_color[top5$organization_name  == "New York City Ballet"] <-
"#0000FF"   # Blue
top5$company_color[top5$organization_name  == "San Francisco Ballet"] <-
"#800080" # Purple
bottom5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet North Texas", "Ballet Quad Cities",
"First State Ballet Theatre", "The Tallahassee Ballet",
"Canyon Concert Ballet"))
View(top5)
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = company_color)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
viz_top5_change
## Finding the top5 and bottom5 based on the eoy balance in 2022
top5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet", "San Francisco Ballet",
"Houston Ballet", "Alvin Ailey American Dance Theater",
"Boston Ballet"))
top5$company_color[top5$organization_name == "Alvin Ailey American Dance Theater"] <-
"#FFA500" # Orange
top5$company_color[top5$organization_name  == "Boston Ballet"] <-
'#556B2F' # Olive Green
top5$company_color[top5$organization_name  == "Houston Ballet"] <-
"#00FF00" # Green
top5$company_color[top5$organization_name  == "New York City Ballet"] <-
"#0000FF"   # Blue
top5$company_color[top5$organization_name  == "San Francisco Ballet"] <-
"#800080" # Purple
bottom5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet North Texas", "Ballet Quad Cities",
"First State Ballet Theatre", "The Tallahassee Ballet",
"Canyon Concert Ballet"))
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
viz_top5_change
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
viz_top5_change
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
color = organization_name)) + #group = organization_name,
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_time <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines") %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(
list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data)) {
viz_top5_time <- viz_top5_time %>% add_trace(viz_top5_change_plotly$x$data[[i]])}
# viz_top5_change_plotly
viz_top5_time
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~company_color,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
viz_top5_change2
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
viz_top5_change_plotly
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
legend=list(title=list(text='Company Name')),
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
legend=list(title=list(text='Company Name')),
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
viz_top5_change2
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
viz_top5_change2
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
# type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
viz_top5_change2
# Create ggplot visualization
viz_top5_change <-
ggplot(data = top5, aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Fiscal Year",
y = "Difference ($)",
caption="Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
scale_fill_manual(values = top5$company_color)
# Convert ggplot to Plotly object
viz_top5_change_plotly <- ggplotly(viz_top5_change)
# Create a Plotly plot with traces for each organization
viz_top5_change2 <- plot_ly() %>%
add_trace(data = top5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", #mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(
title = "Top 5 Ballet Companies: Endowment Balance Changes",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Difference ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_top5_change_plotly$x$data))
{viz_top5_change2 <-
viz_top5_change2 %>%
add_trace(viz_top5_change_plotly$x$data[[i]])}
viz_top5_change2
viz_top5_spread <-
ggplot(data = top5, aes(x = difference , y = fiscal_year,
group = organization_name, color= organization_name)) +
geom_boxplot() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Difference ($)",
y = "Fiscal Year",
caption="Source: Schedule D, Part V") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) +
scale_fill_manual(values = top5$company_color)
viz_top5_spread
top5$company_color[top5$organization_name == "Alvin Ailey American Dance Theater"] <-
'#30D5C8' # Turqoise
top5$company_color[top5$organization_name  == "Boston Ballet"] <-
"#FFA500" # Orange
top5$company_color[top5$organization_name  == "Houston Ballet"] <-
"#0000FF"   # Blue
top5$company_color[top5$organization_name  == "New York City Ballet"] <-
"#800080" # Purple
top5$company_color[top5$organization_name  == "San Francisco Ballet"] <-
"#00FF00" # Green
viz_top5_spread <-
ggplot(data = top5, aes(x = difference , y = fiscal_year,
group = organization_name, color= organization_name)) +
geom_boxplot() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Difference ($)",
y = "Fiscal Year",
caption="Source: Schedule D, Part V") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) +
scale_fill_manual(values = top5$company_color)
viz_top5_spread
viz_top5_spread <-
ggplot(data = top5, aes(x = difference , y = fiscal_year,
group = organization_name, color= organization_name)) +
geom_boxplot() +
labs(title = "Top 5 Ballet Funds: Endowment Balance Changes",
subtitle = "Fiscal Years 2016-2022",
x = "Difference ($)",
y = "Fiscal Year",
caption="Source: Schedule D, Part V") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = top5$company_color)
viz_top5_spread
scheduleD_22 <- subset(schedule_d_cleaned, fiscal_year == "2022")
View(scheduleD_22)
scheduleD_20 <- subset(schedule_d_cleaned, fiscal_year == "2020")
View(scheduleD_20)
scheduleD_22 <- subset(schedule_d_cleaned, fiscal_year == "2022") # according to 2022 EOYB
scheduleD_20 <- subset(schedule_d_cleaned, fiscal_year == "2020")
View(scheduleD_20)
