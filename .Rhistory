# ## Set directory
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/data")
## Load data
schedule_d <- read.csv("schedule_d_vals.csv")
companies <- read.csv("companies.csv")
# Chunk 4
# Cleaning column names
schedule_d <- schedule_d %>%
clean_names()
schedule_d_cleaned <-
schedule_d %>%
rename(
administrative_expenses = x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_administrative_expenses_amt,
boy_balance =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
contributions =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt,
eoy_balance=
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
grants_or_scholarships =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_grants_or_scholarships_amt,
investment_earnings_or_losses = x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_investment_earnings_or_losses_amt,
other_expenditure =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_other_expenditures_amt,
total_expenses =
x_return_return_data_irs990schedule_d_total_expenses_per_form990amt)
## schedule_d_cleaned - change data type
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(fiscal_year = as.character(fiscal_year))
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(ein = as.character(ein))
# ## Changing EIN to character - companies
# x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_other_expenditures_amt)
# Changing EIN to character - schedule_d
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(fiscal_year = as.character(fiscal_year))
# Changing EIN to character - schedule_d
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(ein = as.character(ein))
# Changing EIN to character - companies
companies <- companies %>%
mutate(ein = as.character(ein)) %>%
select(ein, organization_name)
# new df with focusedcolumns
schedule_d_cleaned <- schedule_d_cleaned %>%
select("ein",
"fiscal_year",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure",
"total_expenses")
## Joining datasets
schedule_d_cleaned <- schedule_d_cleaned %>%
left_join(companies , by = 'ein', relationship = "many-to-many")
# Chunk 5
## ensuring NAs are consistent
## schedule_d_checkvars - change data type
# schedule_d_checkvars <- schedule_d %>%
#   mutate(ein = as.character(ein))
## Validity check
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,
#          fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt) %>%
#   left_join(companies , by = 'ein', relationship = "many-to-many")
#
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,organization_name,fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt)
# Chunk 6
## calculating the change in endowment balance, difference between eoy - boy
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(difference = (eoy_balance - boy_balance))
## new df with diffs and vars of interest
# df_diffs <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, boy_balance, eoy_balance, difference)
# ## total_expenses; sum of administrative_expenses, grants_or_scholarships, other_expenditure
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(total_expenses = rowSums(
#     select(., administrative_expenses, grants_or_scholarships, other_expenditure)))
#
# ## calculating expense ratio, total expenses relative to the endowment's total assets
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(expense_ratio = (total_expenses / eoy_balance) * 100)
## new df with expense ratios and vars of interests
# expense_ratio_df <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, expense_ratio, eoy_balance, total_expenses)
# net flows reflects net inflow/outflow of contributions to the fund
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(net_flows = (contributions-grants_or_scholarships))
## set df order for vars
schedule_d_cleaned <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, boy_balance, eoy_balance,
difference, contributions, investment_earnings_or_losses,
grants_or_scholarships, other_expenditure, administrative_expenses, total_expenses)
# Chunk 7
# Sort organization_name alphabetically
df_diffs <- schedule_d_cleaned %>%
select(organization_name, fiscal_year, boy_balance, eoy_balance, difference) %>%
arrange(organization_name, fiscal_year)
diffs_table <- datatable(df_diffs,
filter = "top", # where to toggle
options = list(pageLength = 10, # organization names per page
lengthMenu = c(10, 25, 50))) # number of rows per page
# Chunk 8
diffs_table
# Chunk 9
## calculating smallest and largest by expenses in FY2018-2022
scheduleD_groups <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, total_expenses, difference) %>%
filter(fiscal_year %in% c("2018", "2019", "2020", "2021", "2022"))
# calculate the average of total_expenses and compare rankings
expense_summary_table <- scheduleD_groups %>%
group_by(organization_name) %>%
summarize(
group_n = n(),
average = mean(total_expenses),
median = median(total_expenses),
max = max(total_expenses),
min = min(total_expenses))
# Chunk 10
## largest endowments
largest_5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet",
"Alvin Ailey American Dance Theater",
"Boston Ballet",
"Houston Ballet",
"Joffrey Ballet"))
largest_10 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet", # avg expense, 78250983.6
"Alvin Ailey American Dance Theater", # avg expense, 40508814.4
"Boston Ballet", # avg expense, 31447678.0
"Houston Ballet", # avg expense, 30798842.6
"Joffrey Ballet", # avg expense, 19179594.2
"Miami City Ballet", # avg expense, 18595308.4
"Pennsylvania Ballet", # avg expense, 13947001.0
"Ballet West", # avg expense, 12663388.2
"The Washington Ballet", # avg expense, 12203710.0
"Atlanta Ballet")) # avg expense, 11479259.0
# Chunk 11
# Create ggplot visualization
largest_5_changeovertime <-
ggplot(data = largest_5,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 5 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L5_plotly <- ggplotly(largest_5_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L5_changes <- plot_ly() %>%
add_trace(data = largest_5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 5: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L5_plotly$x$data))
{L5_changes <-
L5_changes %>%
add_trace(viz_L5_plotly$x$data[[i]])}
# Chunk 12
L5_changes
# Chunk 13
largest_5$organization_name <- str_wrap(largest_5$organization_name, width = 12)
L5_spread <-
ggplot(data = largest_5, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 5 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L5_spread_plotly <- ggplotly(L5_spread)
# Chunk 14
viz_L5_spread_plotly
# Chunk 15
# Create ggplot visualization
largest_10_changeovertime <-
ggplot(data = largest_10,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 10 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L10_plotly <- ggplotly(largest_10_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L10_changes <- plot_ly() %>%
add_trace(data = largest_10, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 10: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L10_plotly$x$data))
{L10_changes <-
L10_changes %>%
add_trace(viz_L10_plotly$x$data[[i]])}
# Chunk 16
L10_changes
# Chunk 17
largest_10$organization_name <- str_wrap(largest_10$organization_name, width = 12)
L10_spread <-
ggplot(data = largest_10, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 10 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L10_spread_plotly <- ggplotly(L10_spread)
# Chunk 18
viz_L10_spread_plotly
# Chunk 19
# new way to determine smallest 5 and 10 since the currents have NAs in differences
scheduleD_diff_avg <- scheduleD_groups %>%
group_by(organization_name) %>%
mutate(average_diff = mean(difference)) %>%
select(organization_name, total_expenses, average_diff)
# Chunk 20
## smallest endowments BASED ON EXPENSES
smallest_5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Frontier",
"Ballet Quad Cities",
"Moveius Contemporary Ballet",
"Portland Ballet",
"Chattanooga Ballet"))
smallest_10 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Frontier", # avg expense, 250069.6
"Ballet Quad Cities", # avg expense, 372069.0
"Moveius Contemporary Ballet", # avg expense, 469734.8
"Portland Ballet", # avg expense, 495371.6
"Chattanooga Ballet", # avg expense, 534258.2
"First State Ballet Theatre", # avg expense, 593174.0
"Oakland Ballet Company", # avg expense, 751864.8
"Huntsville Ballet Company", # avg expense, 781799.3
"Rochester City Ballet", # avg expense, 841542.6
"Ballet Theatre of Maryland")) # avg expense, 844564.8
# calculate the average of diff and compare rankings
smallest_5_a <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Quad Cities",
"New Mexico Ballet Company",
"Fort Wayne Ballet",
"Eugene Ballet",
"Grand Rapids Ballet"))
smallest_10_a <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Quad Cities",
"New Mexico Ballet Company",
"Fort Wayne Ballet",
"Eugene Ballet",
"Grand Rapids Ballet",
"The Alabama Ballet",
"Nevada Ballet Theatre",
"Ballet Memphis",
"Oregon Ballet Theatre",
"BalletMet"))
# Chunk 21
# Create ggplot visualization
smallest_5_changeovertime <-
ggplot(data = smallest_5_a,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Smallest 5 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_S5_plotly <- ggplotly(smallest_5_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
S5_changes <- plot_ly() %>%
add_trace(data = smallest_5_a, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Smallest 5: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_S5_plotly$x$data))
{S5_changes <-
S5_changes %>%
add_trace(viz_S5_plotly$x$data[[i]])}
# Chunk 22
S5_changes
# Chunk 23
smallest_5_a$organization_name <- str_wrap(smallest_5_a$organization_name, width = 12)
S5_spread <-
ggplot(data = smallest_5_a, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Smallest 5 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_S5_spread_plotly <- ggplotly(S5_spread)
# Chunk 24
viz_S5_spread_plotly
# Chunk 25
# Create ggplot visualization
smallest_10_changeovertime <-
ggplot(data = smallest_10_a,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Smallest 10 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_S10_plotly <- ggplotly(smallest_10_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
S10_changes <- plot_ly() %>%
add_trace(data = smallest_10_a, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Smallest 10: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_S10_plotly$x$data))
{S10_changes <-
S10_changes %>%
add_trace(viz_S10_plotly$x$data[[i]])}
# Chunk 26
S10_changes
# Chunk 27
smallest_10_a$organization_name <- str_wrap(smallest_10_a$organization_name, width = 12)
S10_spread <-
ggplot(data = smallest_10_a, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Smallest 10 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_S10_spread_plotly <- ggplotly(S10_spread)
# Chunk 28
viz_S10_spread_plotly
# Chunk 29
# contributions <-
#   ggplot(data = schedule_d_cleaned, aes(x = organization_name , y = fiscal_year)) +
#   geom_boxplot() +
#   labs(title = "Bottom 5 Ballet Funds: Endowment Balance Changes",
#        subtitle = "Fiscal Years 2016-2022",
#        x = "Difference ($)",
#        y = "Company",
#        caption="Source: Schedule D, Part V") +
#   scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
# Chunk 30
# ## example snapshot of expense ratios for SF
# nyc_er <- expense_ratio_df %>%
#   filter(organization_name == "New York City Ballet")
# sf_er <- expense_ratio_df %>%
#   filter(organization_name == "San Francisco Ballet")
# Chunk 31
# ## print the first few rows of New York City Ballet
# print(head(nyc_er))
# Chunk 32
# ## print the first few rows of San Francisco Ballet
# print(head(sf_er))
# Chunk 33
# ## Converting data from wide to long and selecting Part V columns from 990s
# expense_ratio_df_2017 <- subset(expense_ratio_df, fiscal_year == "2017")
# expense_ratio_df_2018 <- subset(expense_ratio_df, fiscal_year == "2018")
# expense_ratio_df_2019 <- subset(expense_ratio_df, fiscal_year == "2019")
# expense_ratio_df_2020 <- subset(expense_ratio_df, fiscal_year == "2020")
# expense_ratio_df_2021 <- subset(expense_ratio_df, fiscal_year == "2021")
# expense_ratio_df_2022 <- subset(expense_ratio_df, fiscal_year == "2022")
# Chunk 34
# viz_top5_er <-
#   ggplot(data = top5, aes(x = fiscal_year, y = expense_ratio,
#                              col = organization_name)) +
#   geom_point() +
#   # geom_smooth(method = "loess", se = FALSE) +
#   labs(title = "Top 5 Ballet Funds: Expense Ratios Over Time",
#        subtitle = "Fiscal Years 2016-2022",
#        x = "Fiscal Year",
#        y = "Expense Ratio",
#        caption = "Source: Schedule D, Part V") +
#   scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Chunk 35
# viz_top5_er
# Chunk 36
# viz_top_er_spread <-
#   ggplot(data = top5, aes(x = expense_ratio , y = fiscal_year,
#     group = organization_name, color = organization_name)) +
#   geom_boxplot() +
#   labs(title = "Top 5 Ballet Funds: Spread of Expense Ratios",
#        subtitle = "Fiscal Years 2016-2022",
#        x = "Expense Ratio",
#        y = "Company",
#        caption="Source: Schedule D, Part V") +
#   scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
# Chunk 37
#  viz_top_er_spread
# Chunk 38
# expense_ratio_spread17 <-
#   ggplot (expense_ratio_df_2017, aes(x= organization_name, y= expense_ratio)) +
#   geom_boxplot () +
#   facet_wrap(~eoy_balance, scales = "free") +
#   labs(title = "Distribution of Expense Ratios",
#     subtitle = "Schedule D, Part V, 2017 Filings",
#     x = "Expense Ratio (%)",
#     y = "Frequency")
# Chunk 39
# ## example snapshot of changes in fiscal year balances
# balance_diff_sf <- schedule_d_cleaned %>%
#   filter(organization_name == "San Francisco Ballet")
# ## print the first few rows of San Francisco Ballet
# print(head(balance_diff_sf))
#
# # Figure 13 illustrates the variations in balance between the end and beginning of the year for San Francisco, another significantly large ballet company. These balances show varying differences and interestingly the balance remains the same in 2016. In future analyses, we can observe a larger range of data to see what the balances were before 2016. Across the fiscal years spanning from 2016 to 2022, the average variance amounts to $62,06,321.
# Chunk 40
# ## example snapshot of changes in fiscal year balances
# balance_diff_nyc <- schedule_d_cleaned %>%
#   filter(organization_name == "New York City Ballet") %>%
#   select(organization_name, fiscal_year, difference)
#
# ## print the first few rows of New York City Ballet
# print(head(balance_diff_nyc))
#
# # # Figure 12 demonstrates the changes between the end of year and start of year balance for the New York City ballet, one of the largest ballet dance companies. We witness an inconsistent fluctuation of these balances. The trends range from a positive difference, indicating a larger end of year balance compared to the start of year balance, and then negative balances demonstrating vice versa. Overall, the fiscal years from 2016 to 2022 have a mean difference of $13,678,566.
#       "other_expenditure")
# # Joining datasets
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   left_join(companies , by = 'ein', relationship = "many-to-many")
#
# # Function to filter out year
# pick_vars <- function(data, fiscal_year) {
#   select("ein",
#       "administrative_expenses",
#       "boy_balance",
#       "contributions",
#       "eoy_balance",
#       "grants_or_scholarships",
#       "investment_earnings_or_losses",
#       "other_expenditure")}
#
# # Converting data from wide to long and selecting Part V columns from 990s
# schedule_d_2017 <- subset(schedule_d_cleaned, fiscal_year == "2017")
# schedule_d_2018 <- subset(schedule_d_cleaned, fiscal_year == "2018")
# schedule_d_2019 <- subset(schedule_d_cleaned, fiscal_year == "2019")
# schedule_d_2020 <- subset(schedule_d_cleaned, fiscal_year == "2020")
# schedule_d_2021 <- subset(schedule_d_cleaned, fiscal_year == "2021")
# schedule_d_2022 <- subset(schedule_d_cleaned, fiscal_year == "2022")
View(schedule_d_cleaned)
#Loading the Packages
library(randomForest)
library(dplyr)
library(caret)
library(readr)
test_data <- read.csv("/kaggle/input/titanic/test.csv", stringsAsFactors = FALSE, header = TRUE)
