<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> a628663 (adding calcs)
"investment_earnings_or_losses",
"other_expenditure",
"total_expenses")
## Joining datasets
schedule_d_cleaned <- schedule_d_cleaned %>%
left_join(companies , by = 'ein', relationship = "many-to-many")
# Chunk 5
## ensuring NAs are consistent
## schedule_d_checkvars - change data type
# schedule_d_checkvars <- schedule_d %>%
#   mutate(ein = as.character(ein))
## Validity check
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,
#          fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt) %>%
#   left_join(companies , by = 'ein', relationship = "many-to-many")
#
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,organization_name,fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt)
# Chunk 6
## calculating the change in endowment balance, difference between eoy - boy
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(difference = (eoy_balance - boy_balance))
## new df with diffs and vars of interest
# df_diffs <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, boy_balance, eoy_balance, difference)
# ## total_expenses; sum of administrative_expenses, grants_or_scholarships, other_expenditure
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(total_expenses = rowSums(
#     select(., administrative_expenses, grants_or_scholarships, other_expenditure)))
#
# ## calculating expense ratio, total expenses relative to the endowment's total assets
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(expense_ratio = (total_expenses / eoy_balance) * 100)
## new df with expense ratios and vars of interests
# expense_ratio_df <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, expense_ratio, eoy_balance, total_expenses)
# net flows reflects net inflow/outflow of contributions to the fund
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(net_flows = (contributions-grants_or_scholarships))
## set df order for vars
schedule_d_cleaned <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, boy_balance, eoy_balance,
difference, contributions, investment_earnings_or_losses,
grants_or_scholarships, other_expenditure, administrative_expenses, total_expenses)
# Chunk 7
# Sort organization_name alphabetically
df_diffs <- schedule_d_cleaned %>%
select(organization_name, fiscal_year, boy_balance, eoy_balance, difference) %>%
arrange(organization_name, fiscal_year)
diffs_table <- datatable(df_diffs,
filter = "top", # where to toggle
options = list(pageLength = 10, # organization names per page
lengthMenu = c(10, 25, 50))) # number of rows per page
# Chunk 8
diffs_table
# Chunk 9
## calculating smallest and largest by expenses in FY2018-2022
scheduleD_groups <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, total_expenses, difference) %>%
filter(fiscal_year %in% c("2018", "2019", "2020", "2021", "2022"))
# calculate the average of total_expenses and compare rankings
expense_summary_table <- scheduleD_groups %>%
group_by(organization_name) %>%
summarize(
group_n = n(),
average = mean(total_expenses),
median = median(total_expenses),
max = max(total_expenses),
min = min(total_expenses))
# Chunk 10
## largest endowments
largest_5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet",
"Alvin Ailey American Dance Theater",
"Boston Ballet",
"Houston Ballet",
"Joffrey Ballet"))
largest_10 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet", # avg expense, 78250983.6
"Alvin Ailey American Dance Theater", # avg expense, 40508814.4
"Boston Ballet", # avg expense, 31447678.0
"Houston Ballet", # avg expense, 30798842.6
"Joffrey Ballet", # avg expense, 19179594.2
"Miami City Ballet", # avg expense, 18595308.4
"Pennsylvania Ballet", # avg expense, 13947001.0
"Ballet West", # avg expense, 12663388.2
"The Washington Ballet", # avg expense, 12203710.0
"Atlanta Ballet")) # avg expense, 11479259.0
# Chunk 11
# Create ggplot visualization
largest_5_changeovertime <-
ggplot(data = largest_5,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 5 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L5_plotly <- ggplotly(largest_5_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L5_changes <- plot_ly() %>%
add_trace(data = largest_5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 5: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L5_plotly$x$data))
{L5_changes <-
L5_changes %>%
add_trace(viz_L5_plotly$x$data[[i]])}
# Chunk 12
L5_changes
# Chunk 13
# Create ggplot visualization
largest_10_changeovertime <-
ggplot(data = largest_10,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 10 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L10_plotly <- ggplotly(largest_10_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L10_changes <- plot_ly() %>%
add_trace(data = largest_10, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 10: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L10_plotly$x$data))
{L10_changes <-
L10_changes %>%
add_trace(viz_L10_plotly$x$data[[i]])}
# Chunk 14
L10_changes
# Chunk 15
largest_5$organization_name <- str_wrap(largest_5$organization_name, width = 12)
L5_spread <-
ggplot(data = largest_5, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 5 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L5_spread_plotly <- ggplotly(L5_spread)
# Chunk 16
viz_L5_spread_plotly
# Chunk 17
largest_10$organization_name <- str_wrap(largest_10$organization_name, width = 12)
L10_spread <-
ggplot(data = largest_10, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 10 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L10_spread_plotly <- ggplotly(L10_spread)
# Chunk 18
viz_L10_spread_plotly
scheduleD_diff_avg <- scheduleD_groups %>%
group_by(organization_name) %>%
mutate(average_diff = mean(difference)) %>%
select(organization_name, total_expenses, average_diff)
View(scheduleD_diff_avg)
# Chunk 1
## Set default behavior for all code chunks here:
<<<<<<< HEAD
=======
schedule_d_2017 <- subset(schedule_d, fiscal_year == "2017") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2018 <- subset(schedule_d, fiscal_year == "2018") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2019 <- subset(schedule_d, fiscal_year == "2019") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2020 <- subset(schedule_d, fiscal_year == "2020") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2021 <- subset(schedule_d, fiscal_year == "2021") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2022 <- subset(schedule_d, fiscal_year == "2022") %>%
select("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
View(schedule_d_2018)
View(schedule_d_2020)
# Cleaning variable names
schedule_d <- rename_cols(schedule_d,
c("x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_administrative_expenses_amt",                            "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_beginning_year_balance_amt", "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_contributions_amt",        "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_end_year_balance_amt",     "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_grants_or_scholarships_amt",
"x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_investment_earnings_or_losses_amt",                              "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_other_expenditures_amt"),
c("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure"))
# Converting data from wide to long and selecting Part V columns from 990s
schedule_d_2017 <- subset(schedule_d, fiscal_year == "2017") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2018 <- subset(schedule_d, fiscal_year == "2018") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2019 <- subset(schedule_d, fiscal_year == "2019") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2020 <- subset(schedule_d, fiscal_year == "2020") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2021 <- subset(schedule_d, fiscal_year == "2021") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2022 <- subset(schedule_d, fiscal_year == "2022") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
View(schedule_d)
View(schedule_d)
# Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
# Load data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
# Cleaning column names
schedule_d <- schedule_d %>%
clean_names()
# Renaming Section D, Part V: Endowment Fund Group Variables
# sort(colnames(schedule_d))
rename_cols <- function(data, old_names, new_names) {
# data
# old_names: vector of old var names
# new_names: a vector of new var names
for (i in seq_along(old_names)) {
names(data)[names(data) == old_names[i]] <- new_names[i]}
return(data)}
# Cleaning variable names
schedule_d <- rename_cols(schedule_d,
c("x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_administrative_expenses_amt",                            "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_beginning_year_balance_amt", "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_contributions_amt",        "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_end_year_balance_amt",     "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_grants_or_scholarships_amt",
"x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_investment_earnings_or_losses_amt",                              "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_other_expenditures_amt"),
c("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure"))
# Converting data from wide to long and selecting Part V columns from 990s
schedule_d_2017 <- subset(schedule_d, fiscal_year == "2017") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2018 <- subset(schedule_d, fiscal_year == "2018") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2019 <- subset(schedule_d, fiscal_year == "2019") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2020 <- subset(schedule_d, fiscal_year == "2020") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2021 <- subset(schedule_d, fiscal_year == "2021") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2022 <- subset(schedule_d, fiscal_year == "2022") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
investments17 <-
ggplot (data=schedule_d_2017, aes(x= investment_earnings_or_losses)) +
geom_histogram () +
labs(title = "Distribution of 2017 Investment Earnings and Losses",
subtitle = "Assessing Central Tendency and Data Spread",
x = "Amount (USD)",
y = "Count") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
investments17
investments17 <-
ggplot (data=schedule_d_2017, aes(x= investment_earnings_or_losses)) +
geom_histogram () +
labs(title = "Distribution of 2017 Investment Earnings and Losses",
subtitle = "Assessing Central Tendency and Data Spread",
x = "Amount (USD)",
y = "Count") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
investments17
investments17_summary <- schedule_d_2017 |>
group_by(ein) |>
summarize(
group_n = n(),
mean = mean(investment_earnings_or_losses),
median = median(investment_earnings_or_losses),
max = max(investment_earnings_or_losses),
min = min(investment_earnings_or_losses),
sd = sd(investment_earnings_or_losses))
investments17_summary
# Set default behavior for all code chunks here:
>>>>>>> 85a5e7f (# data wrangling)
=======
>>>>>>> a628663 (adding calcs)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16/2,
fig.height = 9/2)
<<<<<<< HEAD
<<<<<<< HEAD
# Chunk 2
=======
# Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
# Load data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
# Cleaning column names
schedule_d <- schedule_d %>%
clean_names()
# Renaming Section D, Part V: Endowment Fund Group Variables
# sort(colnames(schedule_d))
rename_cols <- function(data, old_names, new_names) {
# data
# old_names: vector of old var names
# new_names: a vector of new var names
for (i in seq_along(old_names)) {
names(data)[names(data) == old_names[i]] <- new_names[i]}
return(data)}
# Cleaning variable names
schedule_d <- rename_cols(schedule_d,
c("x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_administrative_expenses_amt",                            "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_beginning_year_balance_amt", "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_contributions_amt",        "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_end_year_balance_amt",     "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_grants_or_scholarships_amt",
"x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_investment_earnings_or_losses_amt",                              "x_return_return_data_irs990schedule_d_cy_minus3yr_endwmt_fund_grp_other_expenditures_amt"),
c("administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure"))
# Converting data from wide to long and selecting Part V columns from 990s
schedule_d_2017 <- subset(schedule_d, fiscal_year == "2017") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2018 <- subset(schedule_d, fiscal_year == "2018") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2019 <- subset(schedule_d, fiscal_year == "2019") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2020 <- subset(schedule_d, fiscal_year == "2020") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2021 <- subset(schedule_d, fiscal_year == "2021") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
schedule_d_2022 <- subset(schedule_d, fiscal_year == "2022") %>%
select("ein",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure")
investments17 <-
ggplot (data=schedule_d_2017, aes(x= investment_earnings_or_losses)) +
geom_histogram () +
labs(title = "Distribution of 2017 Investment Earnings and Losses",
subtitle = "Assessing Central Tendency and Data Spread",
x = "Amount (USD)",
y = "Count") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
investments17
investments17_summary <- schedule_d_2017 |>
group_by(ein) |>
summarize(
group_n = n(),
mean = mean(investment_earnings_or_losses),
median = median(investment_earnings_or_losses),
max = max(investment_earnings_or_losses),
min = min(investment_earnings_or_losses),
sd = sd(investment_earnings_or_losses))
investments17_summary
investments17_summary <- schedule_d_2017 |>
group_by(ein) |>
summarize(
group_n = n(),
mean = mean(investment_earnings_or_losses),
median = median(investment_earnings_or_losses),
max = max(investment_earnings_or_losses),
min = min(investment_earnings_or_losses),
sd = sd(investment_earnings_or_losses))
investments17 <-
ggplot (data=schedule_d_2017, aes(x= investment_earnings_or_losses)) +
geom_histogram () +
labs(title = "Distribution of 2017 Investment Earnings and Losses",
subtitle = "Assessing Central Tendency and Data Spread",
x = "Amount (USD)",
y = "Count") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
# Chunk 1
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16/2,
fig.height = 9/2)
# Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
# Load data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
company_names <- read_csv(here("data", "companies.csv")) %>%
mutate(EIN = as.character(EIN), organization_name = as.character(Company)) %>%
select(EIN, organization_name)
# Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
# Load data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
company_names <- read_csv(here("schedule_d", "companies.csv")) %>%
mutate(EIN = as.character(EIN), organization_name = as.character(Company)) %>%
select(EIN, organization_name)
# Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
# Load data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
companies <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/companies.csv")
#
# company_names <- read_csv(here("data", "companies.csv")) %>%
#   mutate(EIN = as.character(EIN), organization_name = as.character(Company)) %>%
#   select(EIN, organization_name)
#
# total_expense_data <- total_expense_data %>%
#   left_join(company_names, by = 'EIN')
company_names <- read_csv(here("schedule_d", "companies.csv"))
View(companies)
View(schedule_d)
companies <- companies %>%
mutate(EIN = as.character(EIN), organization_name = as.character(Company)) %>%
select(EIN, organization_name)
companies <- companies %>%
mutate(ein = as.character(EIN), organization_name = as.character(Company)) %>%
select(EIN, organization_name)
companies
companies <- companies %>%
mutate(ein = as.character(EIN), organization_name = as.character(Company)) %>%
select(ein, organization_name)
companies <- companies %>%
mutate(ein = as.character(ein), organization_name = as.character(organization_name)) %>%
select(ein, organization_name)
schedule_d <- schedule_d %>%
left_join(company_names, by = 'ein')
>>>>>>> 85a5e7f (# data wrangling)
=======
# Chunk 2
>>>>>>> a628663 (adding calcs)
## Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> a628663 (adding calcs)
library(plotly) # interactive visualizations
library(DT) # interactive table
library(stringr) # abbreviate val
set.seed(76)
# Chunk 3
# ## Set directory
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
## Load data
schedule_d <- read.csv("schedule_d_vals.csv")
companies <- read.csv("companies.csv")
# Chunk 4
## Cleaning column names
schedule_d <- schedule_d %>% clean_names()
schedule_d_cleaned <-
schedule_d %>%
rename(administrative_expenses = x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_administrative_expenses_amt,
boy_balance =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
contributions =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt,
eoy_balance=
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
grants_or_scholarships =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_grants_or_scholarships_amt,
investment_earnings_or_losses = x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_investment_earnings_or_losses_amt,
other_expenditure =
x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_other_expenditures_amt,
total_expenses =
x_return_return_data_irs990schedule_d_total_expenses_per_form990amt)
## schedule_d_cleaned - change data type
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(fiscal_year = as.character(fiscal_year))
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(ein = as.character(ein))
## Changing EIN to character - companies
companies <- companies %>%
mutate(ein = as.character(ein)) %>%
select(ein, organization_name)
## new df with main columns
schedule_d_cleaned <- schedule_d_cleaned %>%
select("ein",
"fiscal_year",
"administrative_expenses",
"boy_balance",
"contributions",
"eoy_balance",
"grants_or_scholarships",
"investment_earnings_or_losses",
"other_expenditure",
"total_expenses")
## Joining datasets
schedule_d_cleaned <- schedule_d_cleaned %>%
left_join(companies , by = 'ein', relationship = "many-to-many")
# Chunk 5
## ensuring NAs are consistent
## schedule_d_checkvars - change data type
# schedule_d_checkvars <- schedule_d %>%
#   mutate(ein = as.character(ein))
## Validity check
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,
#          fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt) %>%
#   left_join(companies , by = 'ein', relationship = "many-to-many")
#
# schedule_d_checkvars <- schedule_d_checkvars %>%
#   select(ein,organization_name,fiscal_year,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_beginning_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_end_year_balance_amt,
#          x_return_return_data_irs990schedule_d_cy_endwmt_fund_grp_contributions_amt)
# Chunk 6
## calculating the change in endowment balance, difference between eoy - boy
schedule_d_cleaned <- schedule_d_cleaned %>%
mutate(difference = (eoy_balance - boy_balance))
## new df with diffs and vars of interest
# df_diffs <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, boy_balance, eoy_balance, difference)
# ## total_expenses; sum of administrative_expenses, grants_or_scholarships, other_expenditure
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(total_expenses = rowSums(
#     select(., administrative_expenses, grants_or_scholarships, other_expenditure)))
#
# ## calculating expense ratio, total expenses relative to the endowment's total assets
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(expense_ratio = (total_expenses / eoy_balance) * 100)
## new df with expense ratios and vars of interests
# expense_ratio_df <- schedule_d_cleaned %>%
#   select(organization_name, fiscal_year, expense_ratio, eoy_balance, total_expenses)
# net flows reflects net inflow/outflow of contributions to the fund
# schedule_d_cleaned <- schedule_d_cleaned %>%
#   mutate(net_flows = (contributions-grants_or_scholarships))
## set df order for vars
schedule_d_cleaned <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, boy_balance, eoy_balance,
difference, contributions, investment_earnings_or_losses,
grants_or_scholarships, other_expenditure, administrative_expenses, total_expenses)
# Chunk 7
# Sort organization_name alphabetically
df_diffs <- schedule_d_cleaned %>%
select(organization_name, fiscal_year, boy_balance, eoy_balance, difference) %>%
arrange(organization_name, fiscal_year)
diffs_table <- datatable(df_diffs,
filter = "top", # where to toggle
options = list(pageLength = 10, # organization names per page
lengthMenu = c(10, 25, 50))) # number of rows per page
# Chunk 8
diffs_table
# Chunk 9
## calculating smallest and largest by expenses in FY2018-2022
scheduleD_groups <- schedule_d_cleaned %>%
select(ein, organization_name, fiscal_year, total_expenses, difference) %>%
filter(fiscal_year %in% c("2018", "2019", "2020", "2021", "2022"))
# calculate the average of total_expenses and compare rankings
expense_summary_table <- scheduleD_groups %>%
group_by(organization_name) %>%
summarize(
group_n = n(),
average = mean(total_expenses),
median = median(total_expenses),
max = max(total_expenses),
min = min(total_expenses))
# Chunk 10
## largest endowments
largest_5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet",
"Alvin Ailey American Dance Theater",
"Boston Ballet",
"Houston Ballet",
"Joffrey Ballet"))
largest_10 <- schedule_d_cleaned %>%
filter(organization_name %in% c("New York City Ballet", # avg expense, 78250983.6
"Alvin Ailey American Dance Theater", # avg expense, 40508814.4
"Boston Ballet", # avg expense, 31447678.0
"Houston Ballet", # avg expense, 30798842.6
"Joffrey Ballet", # avg expense, 19179594.2
"Miami City Ballet", # avg expense, 18595308.4
"Pennsylvania Ballet", # avg expense, 13947001.0
"Ballet West", # avg expense, 12663388.2
"The Washington Ballet", # avg expense, 12203710.0
"Atlanta Ballet")) # avg expense, 11479259.0
# Chunk 11
# Create ggplot visualization
largest_5_changeovertime <-
ggplot(data = largest_5,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 5 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L5_plotly <- ggplotly(largest_5_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L5_changes <- plot_ly() %>%
add_trace(data = largest_5, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 5: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L5_plotly$x$data))
{L5_changes <-
L5_changes %>%
add_trace(viz_L5_plotly$x$data[[i]])}
# Chunk 12
L5_changes
# Chunk 13
# Create ggplot visualization
largest_10_changeovertime <-
ggplot(data = largest_10,
aes(x = fiscal_year, y = difference,
group = organization_name, color = organization_name)) +
geom_line(aes(color = organization_name)) +
labs(title = "Largest 10 Companies",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Fiscal Year",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
# Convert ggplot to Plotly object
viz_L10_plotly <- ggplotly(largest_10_changeovertime) #viz_top5_change_plotly <-
# Create a Plotly plot with traces for each organization
L10_changes <- plot_ly() %>%
add_trace(data = largest_10, x = ~fiscal_year, y = ~difference,
group = ~organization_name, color = ~organization_name,
type = "scatter", mode = "lines",
name = ~organization_name) %>%  # Use org var for the trace name
layout(title = "Largest 10: Comparing Balance Changes FY16-2022",
xaxis = list(title = "Fiscal Year"),
yaxis = list(title = "Balances Differences ($)"),
updatemenus = list(list(
type = "buttons",
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE)),
label = "Show All Companies")))))
# # Add traces from ggplot to Plotly plot
for (i in 1:length(viz_L10_plotly$x$data))
{L10_changes <-
L10_changes %>%
add_trace(viz_L10_plotly$x$data[[i]])}
# Chunk 14
L10_changes
# Chunk 15
largest_5$organization_name <- str_wrap(largest_5$organization_name, width = 12)
L5_spread <-
ggplot(data = largest_5, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 5 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L5_spread_plotly <- ggplotly(L5_spread)
# Chunk 16
viz_L5_spread_plotly
# Chunk 17
largest_10$organization_name <- str_wrap(largest_10$organization_name, width = 12)
L10_spread <-
ggplot(data = largest_10, aes(x = organization_name, y = difference, group = organization_name, color = organization_name)) +
geom_boxplot(aes(color = organization_name)) +
labs(title = "Largest 10 Companies: Spread of Differences",
subtitle = "Comparing Balance Changes FY16-2022",
x = "Company Name",
y = "Balance Differences ($)",
caption = "Source: Schedule D, Part V") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
viz_L10_spread_plotly <- ggplotly(L10_spread)
# Chunk 18
viz_L10_spread_plotly
# Chunk 19
# new way to determine smallest 5 and 10 since the currents have NAs in differences
scheduleD_diff_avg <- scheduleD_groups %>%
group_by(organization_name) %>%
mutate(average_diff = mean(difference)) %>%
select(organization_name, total_expenses, average_diff)
## smallest endowments BASED ON EXPENSES
smallest_5 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Frontier",
"Ballet Quad Cities",
"Moveius Contemporary Ballet",
"Portland Ballet",
"Chattanooga Ballet"))
smallest_10 <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Frontier", # avg expense, 250069.6
"Ballet Quad Cities", # avg expense, 372069.0
"Moveius Contemporary Ballet", # avg expense, 469734.8
"Portland Ballet", # avg expense, 495371.6
"Chattanooga Ballet", # avg expense, 534258.2
"First State Ballet Theatre", # avg expense, 593174.0
"Oakland Ballet Company", # avg expense, 751864.8
"Huntsville Ballet Company", # avg expense, 781799.3
"Rochester City Ballet", # avg expense, 841542.6
"Ballet Theatre of Maryland")) # avg expense, 844564.8
# calculate the average of diff and compare rankings
smallest_5_a <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Quad Cities",
"New Mexico Ballet Company",
"Fort Wayne Ballet",
"Eugene Ballet",
"Grand Rapids Ballet"))
smallest_10_a <- schedule_d_cleaned %>%
filter(organization_name %in% c("Ballet Quad Cities",
"New Mexico Ballet Company",
"Fort Wayne Ballet",
"Eugene Ballet",
"Grand Rapids Ballet",
"The Alabama Ballet",
"Nevada Ballet Theatre",
"Ballet Memphis",
"Oregon Ballet Theatre",
"BalletMet"))
View(smallest_5_a)
View(schedule_d)
View(schedule_d_cleaned)
View(expense_summary_table)
View(schedule_d_cleaned)
View(schedule_d)
<<<<<<< HEAD
=======
## Set directort
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
## Load data
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
companies <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/companies.csv")
## Joining datasets
companies <- companies %>%
mutate(ein = as.character(ein), organization_name = as.character(organization_name)) %>%
select(ein, organization_name)
schedule_d <- schedule_d %>%
left_join(organization_name, by = 'ein')
# Chunk 1
## Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16/2,
fig.height = 9/2)
## Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
## Set directort
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
## Load data
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
companies <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/companies.csv")
## Joining datasets
companies <- companies %>%
mutate(ein = as.character(ein), organization_name = as.character(organization_name)) %>%
select(ein, organization_name)
schedule_d <- schedule_d %>%
left_join(organization_name , by = 'ein')
## Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
## Set directort
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
## Load data
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
companies <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/companies.csv")
## Joining datasets
companies <- companies %>%
mutate(ein = as.character(ein), organization_name = as.character(organization_name)) %>%
select(ein, organization_name)
schedule_d <- schedule_d %>%
left_join(organization_name , by = 'ein')
## Load packages
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
library(janitor) # data manipulation
## Set directort
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
## Load data
schedule_d <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/schedule_d_vals.csv")
companies <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/companies.csv")
## Cleaning column names
schedule_d <- schedule_d %>%
clean_names()
## Renaming Section D, Part V: Endowment Fund Group Variables
# sort(colnames(schedule_d))
rename_cols <- function(data, old_names, new_names) {
# data
# old_names: vector of old var names
# new_names: a vector of new var names
for (i in seq_along(old_names)) {
names(data)[names(data) == old_names[i]] <- new_names[i]}
return(data)}
## Joining datasets
companies <- companies %>%
mutate(ein = as.character(ein), organization_name = as.character(organization_name)) %>%
select(ein, organization_name)
schedule_d <- schedule_d %>%
left_join(organization_name , by = 'ein')
View(schedule_d)
View(schedule_d_2017)
View(companies)
>>>>>>> 85a5e7f (# data wrangling)
=======
>>>>>>> a628663 (adding calcs)
