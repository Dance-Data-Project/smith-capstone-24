size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11, face="bold"),
# t, r, b, l
plot.margin = unit(c(1,.5,.5,.5), "cm"),
legend.position = "right",
strip.text.x = element_text(size = 14, face = "bold", color="white"),
strip.background = element_rect(fill = "#3E3D3D")
) %+replace%
theme(...)
}
# Chunk 2: load data
# load companies file of EIN to name and endowment data
companies_to_ein <- read_rds(here('data',   'companies.RDS'))
companies_to_ein <- companies_to_ein %>%
mutate(organization_name = ifelse(
organization_name == "Ballet Hispanico",
"Ballet Hisp치nico",
organization_name))
companies <- readRDS("~/Desktop/smith-capstone-24/data/companies.RDS")
View(companies)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE, comment=NA, eval=FALSE)
library(tidyverse)
library(kableExtra)
library(scales)
library(plotly)
library(glue)
library(here)
library(viridis)
all_plots <- FALSE
m <- list(
l = 50,
r = 50,
b = 200,
t = 150,
pad = 0.5
)
theme_c <- function(...){
# font <- "Helvetica"   #assign font family up front
theme_bw() %+replace%    #replace elements we want to change
theme(
#text elements
plot.title = element_text(             #title
size = 14,                #set font size
face = 'bold',            #bold typeface
hjust = .5,
vjust = 3),
plot.subtitle = element_text(          #subtitle
size = 12,
hjust = .5,
face = 'italic',
vjust = 3),               #font size
axis.title = element_text(             #axis titles
size =14),               #font size
axis.text.x = element_text(              #axis text
size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11, face="bold"),
# t, r, b, l
plot.margin = unit(c(1,.5,.5,.5), "cm"),
legend.position = "right",
strip.text.x = element_text(size = 14, face = "bold", color="white"),
strip.background = element_rect(fill = "#3E3D3D")
) %+replace%
theme(...)
}
# load companies file of EIN to name and endowment data
companies_to_ein <- read_rds(here('data',   'companies.RDS'))
companies_to_ein <- companies_to_ein %>%
rename(organization_name = Company) %>%
mutate(organization_name = ifelse(
organization_name == "Ballet Hispanico",
"Ballet Hisp치nico",
organization_name))
endowment_data <- read_rds(here("data",
"endowments_by_most_recent_filings.RDS")) %>%
select(-c(EndowmentsHeldUnrelatedOrgInd, EndowmentsHeldRelatedOrgInd)) %>%
pivot_longer(-c(EIN, fiscal_year),
names_to = "variable_name") %>%
left_join(companies_to_ein) %>%
mutate(fiscal_year=as.numeric(paste(fiscal_year)))
companies_to_ein <- read_rds(here('data',   'companies.RDS'))
companies_to_ein <- companies_to_ein %>%
rename(organization_name = Company) %>%
mutate(organization_name = ifelse(
organization_name == "Ballet Hispanico",
"Ballet Hisp치nico",
organization_name))
endowment_data <- read_rds(here("data",
"endowments_by_most_recent_filings.RDS")) %>%
select(-c(EndowmentsHeldUnrelatedOrgInd, EndowmentsHeldRelatedOrgInd)) %>%
pivot_longer(-c(EIN, fiscal_year),
names_to = "variable_name") %>%
left_join(companies_to_ein) %>%
mutate(fiscal_year=as.numeric(paste(fiscal_year)))
endowment_data <- read_rds(here("data",
"endowments_by_most_recent_filings.RDS")) %>%
select(-c(EndowmentsHeldUnrelatedOrgInd, EndowmentsHeldRelatedOrgInd)) %>%
mutate(BeginningYearBalanceAmt = as.numeric(as.character(BeginningYearBalanceAmt)),
ContributionsAmt = as.numeric(as.character(ContributionsAmt)),
OtherExpendituresAmt = as.numeric(as.character(OtherExpendituresAmt)),
AdministrativeExpensesAmt = as.numeric(as.character(AdministrativeExpensesAmt)),
GrantsOrScholarshipsAmt = as.numeric(as.character(GrantsOrScholarshipsAmt)),
InvestmentEarningsOrLossesAmt = as.numeric(as.character(InvestmentEarningsOrLossesAmt)),
EndYearBalanceAmt = as.numeric(as.character(EndYearBalanceAmt)),
EndingBalanceAmt = as.numeric(as.character(EndingBalanceAmt))
) %>%
pivot_longer(-c(EIN, fiscal_year),
names_to = "variable_name") %>%
left_join(companies_to_ein) %>%
mutate(fiscal_year=as.numeric(paste(fiscal_year)))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE, comment=NA, eval=FALSE)
library(tidyverse)
library(kableExtra)
library(scales)
library(plotly)
library(glue)
library(here)
library(viridis)
all_plots <- FALSE
m <- list(
l = 50,
r = 50,
b = 200,
t = 150,
pad = 0.5
)
theme_c <- function(...){
# font <- "Helvetica"   #assign font family up front
theme_bw() %+replace%    #replace elements we want to change
theme(
#text elements
plot.title = element_text(             #title
size = 14,                #set font size
face = 'bold',            #bold typeface
hjust = .5,
vjust = 3),
plot.subtitle = element_text(          #subtitle
size = 12,
hjust = .5,
face = 'italic',
vjust = 3),               #font size
axis.title = element_text(             #axis titles
size =14),               #font size
axis.text.x = element_text(              #axis text
size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11, face="bold"),
# t, r, b, l
plot.margin = unit(c(1,.5,.5,.5), "cm"),
legend.position = "right",
strip.text.x = element_text(size = 14, face = "bold", color="white"),
strip.background = element_rect(fill = "#3E3D3D")
) %+replace%
theme(...)
}
# Chunk 2: load data
# load companies file of EIN to name and endowment data
companies_to_ein <- read_rds(here('data',   'companies.RDS'))
companies_to_ein <- companies_to_ein %>%
rename(organization_name = Company) %>%
mutate(organization_name = ifelse(
organization_name == "Ballet Hispanico",
"Ballet Hisp치nico",
organization_name))
endowment_data <- read_rds(here("data",
"endowments_by_most_recent_filings.RDS")) %>%
select(-c(EndowmentsHeldUnrelatedOrgInd, EndowmentsHeldRelatedOrgInd)) %>%
mutate(BeginningYearBalanceAmt = as.numeric(as.character(BeginningYearBalanceAmt)),
ContributionsAmt = as.numeric(as.character(ContributionsAmt)),
OtherExpendituresAmt = as.numeric(as.character(OtherExpendituresAmt)),
AdministrativeExpensesAmt = as.numeric(as.character(AdministrativeExpensesAmt)),
GrantsOrScholarshipsAmt = as.numeric(as.character(GrantsOrScholarshipsAmt)),
InvestmentEarningsOrLossesAmt = as.numeric(as.character(InvestmentEarningsOrLossesAmt)),
EndYearBalanceAmt = as.numeric(as.character(EndYearBalanceAmt)),
EndingBalanceAmt = as.numeric(as.character(EndingBalanceAmt))
) %>%
pivot_longer(-c(EIN, fiscal_year),
names_to = "variable_name") %>%
left_join(companies_to_ein) %>%
mutate(fiscal_year=as.numeric(paste(fiscal_year)))
# extract return dates
source(here("GET_VARS.R"))
files <- dir(here("ballet_990_released_20230208"),
full.names = TRUE)
dates <- map_df(files,
~get_df(filename = .x,
variables = c("//Return//ReturnHeader//TaxPeriodEndDt"))) %>%
mutate(fiscal_year = as.numeric(paste(fiscal_year))) %>%
filter_ein()
install.packages("rvest")
install.packages("readr")
library(readr) # ef
install.packages("readr")
install.packages("readr")
library(readr)
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
library(rvest) # scrape (or harvest) data from web pages
library(readr) #
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item")
library(rvest) # scrape (or harvest) data from web pages
library(readr) # efficient way to read rectangular data
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item") # select the elements containing the data
# Extract data from the selected elements
data <- lapply(data_elements, function(element) {
data1 <- element %>% html_node(".data-field1") %>% html_text() %>% trimws()
data2 <- element %>% html_node(".data-field2") %>% html_text() %>% trimws()
# Add more data fields as needed
return(list(data1, data2))})   # return the extracted data as a list
# Convert the extracted data into a data frame
data_df <- do.call(rbind, data)
write_csv(data_df, file = "990s_assetallocation/ma_990_df.csv") #upload csv
library(rvest) # scrape (or harvest) data from web pages
library(readr)
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item") # select the elements containing the data
data <- lapply(data_elements, function(element) {
data1 <- element %>% html_node(".data-field1") %>% html_text() %>% trimws()
data2 <- element %>% html_node(".data-field2") %>% html_text() %>% trimws()
View(webpage)
View(data_elements)
# Extract data from the selected elements
data <- lapply(data_elements, function(element) {
data1 <- element %>% html_node(".data-field1") %>% html_text() %>% trimws()
data2 <- element %>% html_node(".data-field2") %>% html_text() %>% trimws()
# Add more data fields as needed
return(list(data1, data2))})
data_df <- do.call(rbind, data)
data_df <- do.call(rbind, data)
write_csv(data_df, file = "990s_assetallocation/ma_990_df.csv") #upload csv
library(rvest) # scrape (or harvest) data from web pages
library(readr) # efficient way to read rectangular data
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item") # select the elements containing the data
# Extract data from the selected elements
data <- lapply(data_elements, function(element) {
data1 <- element %>% html_node(".data-field1") %>% html_text() %>% trimws()
data2 <- element %>% html_node(".data-field2") %>% html_text() %>% trimws()
# Add more data fields as needed
return(list(data1, data2))})   # return the extracted data as a list
# Convert the extracted data into a data frame
data_df <- do.call(rbind, data)
write_csv(data_df, file = "990s_assetallocation/ma_990_df.csv") #upload csv
library(rvest) # scrape (or harvest) data from web pages
library(readr) #
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item") #
library(rvest) # scrape (or harvest) data from web pages
library(readr) # efficient way to read rectangular data
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv" # URL of the website
webpage <- read_html(ma_990) # Read the HTML content of the website
data_elements <- webpage %>% html_nodes(".data-item") # select the elements containing the data
# Extract data from the selected elements
data <- lapply(data_elements, function(element) {
data1 <- element %>% html_node(".data-field1") %>% html_text() %>% trimws()
data2 <- element %>% html_node(".data-field2") %>% html_text() %>% trimws()
# Add more data fields as needed
return(list(data1, data2))})   # return the extracted data as a list
# Convert the extracted data into a data frame
data_df <- do.call(rbind, data)
write_csv(data_df, file = "990s_assetallocation/ma_990_df.csv") #upload csv
install.packages("XML")
yes
> install.packages("XML")
install.packages("XML")
install.packages("RCurl")
library(XML) # tool for parsing and generating XML
library(RCurl) # generating network in R interface
ma_990 <- "https://www.irs.gov/pub/irs-soi/eo_ma.csv"
webpage <- read_html(ma_990)
tables <- html_nodes(webpage, "table")
library(stringr) # string operations
library(dplyr) # data manipulation
library(rvest) # scrapes web pages
EOBMF_MA <- read.csv("990s_assetallocation/EOBMF_MA")
EOBMF_MA <- read.csv("EOBMF_MA")
EOBMF_MA <- read.csv("EOBMF_MA")
?
In file(file, "rt") :
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("EOBMF_MA")
data <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
View(data)
library(dplyr) # data manipulation
library(readr) # scrapes web pages
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
View(EOBMF_MA)
library(dplyr) # data manipulation
library(readr) # scrapes web pages
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
filtered_dF <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
print(filtered_F) # View the filtered data
View(filtered_dF)
library(dplyr) # data manipulation
library(readr) # scrapes web pages
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
View(ma_df)
library(dplyr) # data manipulation
library(readr) # scrapes web pages
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
library(dplyr) # data manipulation
library(readr) # scrapes web pages
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET | DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
library(dplyr) # data manipulation
library(readr) # scrapes web pages
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
View(ma_df)
ma_asset_amt <-
ggplot (data=training, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "Disitribution of Dance and Ballet Company Assets",
subtitle = "Asset Codes relate to the book value amount of assets",
x = "Asset Code",
y = "Count")
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
ma_asset_amt <-
ggplot (data=training, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "Disitribution of Dance and Ballet Company Assets",
subtitle = "Asset Codes relate to the book value amount of assets",
x = "Asset Code",
y = "Count")
ma_asset_amt
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
# Filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
ma_asset_amt <-
ggplot (data=training, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "Disitribution of Dance and Ballet Company Assets",
subtitle = "Asset Codes relate to the book value amount of assets",
x = "Asset Code",
y = "Count")
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "Disitribution of Dance and Ballet Company Assets",
subtitle = "Asset Codes relate to the book value amount of assets",
x = "Asset Code",
y = "Count")
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book value amount of assets",
x = "Asset Code",
y = "Count")
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book value amount of assets",
x = "Asset Code",
y = "Count") +
scale_x_continuous(labels = dollar)
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book Value Total Assets End of Yea",
x = "Asset Code",
y = "Count") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book Value Total Assets End of Yea",
x = "Asset Code",
y = "Count") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book Value Total Assets End of Yea",
x = "Asset Code",
y = "Count") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= ASSET_AMT)) +
geom_histogram () +
labs(title = "2022 Distribution of Dance & Ballet Company Assets",
subtitle = "Book Value Total Assets End of Yea",
x = "Asset Amount",
y = "Count") +
scale_x_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= FOUNDATION, y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets according to Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets according to Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ma_asset_amt <-
ggplot (data=ma_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets by Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
EOBMF_CA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_CA.csv")
# filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
ca_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_CA$NAME, ignore.case = TRUE), ]
ca_asset_amt <-
ggplot (data=ca_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of California Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets by Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ca_asset_amt
library(dplyr) # data manipulation
library(readr) # scrapes web pages
library(ggplot2) # data visualization
# reading in EOBMF data
setwd("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation")
EOBMF_MA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_MA.csv")
EOBMF_CA <- read.csv("/Users/michelruiz-fuentes/Desktop/smith-capstone-24/990s_assetallocation/EOBMF_CA.csv")
# filter the data based on titles containing "ballet" or "dance"
ma_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_MA$NAME, ignore.case = TRUE), ]
ca_df <- EOBMF_MA[grepl("BALLET|DANCE", EOBMF_CA$NAME, ignore.case = TRUE), ]
ma_asset_amt <-
ggplot (data=ma_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of Massachusetts Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets by Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ma_asset_amt
ca_asset_amt <-
ggplot (data=ca_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of California Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets by Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ca_asset_amt <-
ggplot (data=ca_df, aes(x= factor(FOUNDATION), y= ASSET_AMT)) +
geom_boxplot () +
labs(title = "2022 Spread of California Dance & Ballet Company Assets",
subtitle = "Book Value of Total Assets by Foundaton Type",
x = "Foundation Code",
y = "Asset Amount") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ca_asset_amt
